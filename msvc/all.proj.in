<?xml version="1.0" encoding="utf-8"?>
<Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' DefaultTargets='Package'>

  <PropertyGroup>

    <PREFIX>$(MSBuildProjectDirectory)\opt</PREFIX>
    <VARDIR>$(MSBuildProjectDirectory)\var</VARDIR>
    <PBDIR>$(MSBuildProjectDirectory)\..\pb</PBDIR>
    <EIGEN_INCLUDE_DIR>$(MSBuildProjectDirectory)\..\include</EIGEN_INCLUDE_DIR>

    <TargetArch>__TARGET_ARCH</TargetArch>

    <BOOST_UNDERSCORE>__BOOST_UNDERSCORE</BOOST_UNDERSCORE>
    <B2_WITHOUT_OPTIONS>__B2_WITHOUT_OPTIONS</B2_WITHOUT_OPTIONS>
    <CERES_VERSION>__CERES_VERSION</CERES_VERSION>
    <CLIBSEDML_VERSION>__CLIBSEDML_VERSION</CLIBSEDML_VERSION>
    <CZMQ_VERSION>__CZMQ_VERSION</CZMQ_VERSION>
    <LIBSBML_VERSION>__LIBSBML_VERSION</LIBSBML_VERSION>
    <LIBXML2_VERSION>__LIBXML2_VERSION</LIBXML2_VERSION>
    <PROTOBUF_VERSION>__PROTOBUF_VERSION</PROTOBUF_VERSION>
    <SOSLIB_VERSION>__SOSLIB_VERSION</SOSLIB_VERSION>
    <SUNDIALS_VERSION>__SUNDIALS_VERSION</SUNDIALS_VERSION>
    <ZEROMQ_VERSION>__ZEROMQ_VERSION</ZEROMQ_VERSION>

  </PropertyGroup>

  <Choose>
    <When Condition="'$(TargetArch)'=='x64'">
      <PropertyGroup>
        <BoostAddressModelOption>address-model=64</BoostAddressModelOption>
        <CMakeGeneratorOption>-G "Visual Studio 14 2015 Win64"</CMakeGeneratorOption>
      </PropertyGroup>
    </When>
    <When Condition="'$(TargetArch)'=='x86'">
      <PropertyGroup>
        <BoostAddressModelOption>address-model=32</BoostAddressModelOption>
        <CMakeGeneratorOption></CMakeGeneratorOption>
      </PropertyGroup>
    </When>
  </Choose>

  <ItemGroup>
    <wxWidgetsLibraryFiles Include="$(VARDIR)\lib\**\*.*"/>
    <wxWidgetsHeaderFiles Include="$(VARDIR)\include\**\*.*"/>
  </ItemGroup>

  <Target Name='boost' Inputs='tmp\$(BOOST_UNDERSCORE)' Outputs='tmp\$(BOOST_UNDERSCORE).installed'>
    <Exec Command='bootstrap' WorkingDirectory='$(VARDIR)\$(BOOST_UNDERSCORE)'/>
    <Exec Command='.\b2 -d0 --prefix="$(PREFIX)" $(B2_WITHOUT_OPTIONS) $(BoostAddressModelOption) variant=release threading=multi link=shared runtime-link=shared install' WorkingDirectory='$(VARDIR)\$(BOOST_UNDERSCORE)'/>
    <Touch AlwaysCreate='true' Files='tmp\$(BOOST_UNDERSCORE).installed'/>
  </Target>

  <Target Name='ceres-solver' Inputs='tmp\ceres-solver-$(CERES_VERSION)' Outputs='tmp\ceres-solver-$(CERES_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\ceres-solver-$(CERES_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DEIGEN_INCLUDE_DIR="$(EIGEN_INCLUDE_DIR)" -DMINIGLOG=ON -DBUILD_SHARED_LIBS=ON ..' WorkingDirectory='$(VARDIR)\ceres-solver-$(CERES_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\ceres-solver-$(CERES_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\ceres-solver-$(CERES_VERSION).installed'/>
  </Target>

  <Target Name='clibsedml'
          DependsOnTargets='libxml2'
          Inputs='tmp\clibsedml-$(CLIBSEDML_VERSION)'
          Outputs='tmp\clibsedml-$(CLIBSEDML_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\clibsedml-$(CLIBSEDML_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DBUILD_SHARED_LIBS=ON ..' WorkingDirectory='$(VARDIR)\clibsedml-$(CLIBSEDML_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\clibsedml-$(CLIBSEDML_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\clibsedml-$(CLIBSEDML_VERSION).installed'/>
  </Target>

  <Target Name='czmq'
          DependsOnTargets='zeromq'
          Inputs='tmp\czmq-$(CZMQ_VERSION).installed'
          Outputs='tmp\czmq-$(CZMQ_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\czmq-$(CZMQ_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DBUILD_SHARED_LIBS=ON ..' WorkingDirectory='$(VARDIR)\czmq-$(CZMQ_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\czmq-$(CZMQ_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\czmq-$(CZMQ_VERSION).installed'/>
  </Target>

  <Target Name='libsbml'
          DependsOnTargets='libxml2'
          Inputs='tmp\libsbml-$(LIBSBML_VERSION)'
          Outputs='tmp\libsbml-$(LIBSBML_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\libsbml-$(LIBSBML_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DLIBXML_INCLUDE_DIR="$(PREFIX)\include\libxml2" -DWITH_SWIG=OFF -DBUILD_SHARED_LIBS=ON ..' WorkingDirectory='$(VARDIR)\libsbml-$(LIBSBML_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\libsbml-$(LIBSBML_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\libsbml-$(LIBSBML_VERSION).installed'/>
  </Target>

  <Target Name='libxml2' Inputs='tmp\libxml2-$(LIBXML2_VERSION)' Outputs='tmp\libxml2-$(LIBXML2_VERSION).installed'>
    <Exec Command='cscript configure.js prefix="$(PREFIX)" static=no debug=no iconv=no icu=no ftp=no http=no lzma=no python=no threads=no zlib=no' WorkingDirectory='$(VARDIR)/libxml2-$(LIBXML2_VERSION)/win32'/>
    <Exec Command='nmake /f Makefile.msvc rebuild install' WorkingDirectory='$(VARDIR)/libxml2-$(LIBXML2_VERSION)/win32'/>
    <Touch AlwaysCreate='true' Files='tmp\libxml2-$(LIBXML2_VERSION).installed'/>
  </Target>

  <Target Name='protobuf' Inputs='tmp\protobuf-$(PROTOBUF_VERSION)' Outputs='tmp\protobuf-$(PROTOBUF_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\protobuf-$(PROTOBUF_VERSION)\cmake\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DBUILD_SHARED_LIBS=ON -Dprotobuf_BUILD_TESTS=OFF ..' WorkingDirectory='$(VARDIR)\protobuf-$(PROTOBUF_VERSION)\cmake\build'/>
    <Exec Command='cmake --build "$(VARDIR)\protobuf-$(PROTOBUF_VERSION)\cmake\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\protobuf-$(PROTOBUF_VERSION).installed'/>
  </Target>

  <Target Name='SBML_odeSolver'
          DependsOnTargets='libsbml'
          Inputs='tmp\SBML_odeSolver-$(SOSLIB_VERSION)'
          Outputs='tmp\SBML_odeSolver-$(SOSLIB_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\SBML_odeSolver-$(SOSLIB_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DBUILD_SHARED_LIBS=ON ..' WorkingDirectory='$(VARDIR)\SBML_odeSolver-$(SOSLIB_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\SBML_odeSolver-$(SOSLIB_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\SBML_odeSolver-$(SOSLIB_VERSION).installed'/>
  </Target>

  <Target Name='sundials' Inputs='tmp\sundials-$(SUNDIALS_VERSION)' Outputs='tmp\sundials-$(SUNDIALS_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\sundials-$(SUNDIALS_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON ..' WorkingDirectory='$(VARDIR)\sundials-$(SUNDIALS_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\sundials-$(SUNDIALS_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\sundials-$(SUNDIALS_VERSION).installed'/>
  </Target>

  <Target Name='zeromq' Inputs='tmp\zeromq-$(ZEROMQ_VERSION)' Outputs='tmp\zeromq-$(ZEROMQ_VERSION).installed'>
    <MakeDir Directories='$(VARDIR)\zeromq-$(ZEROMQ_VERSION)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DBUILD_SHARED_LIBS=ON -DWITH_PERF_TOOL=OFF -DZMQ_BUILD_TESTS=OFF -DENABLE_CPACK=OFF ..' WorkingDirectory='$(VARDIR)\zeromq-$(ZEROMQ_VERSION)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\zeromq-$(ZEROMQ_VERSION)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\zeromq-$(ZEROMQ_VERSION).installed'/>
  </Target>

  <Target Name='wxWidgets'>
    <Copy SourceFiles='@(wxWidgetsLibraryFiles)' DestinationFiles="@(wxWidgetsLibraryFiles->'$(PREFIX)\lib\%(RecursiveDir)%(Filename)%(Extension)')"/>
    <Copy SourceFiles='@(wxWidgetsHeaderFiles)' DestinationFiles="@(wxWidgetsHeaderFiles->'$(PREFIX)\include\%(RecursiveDir)%(Filename)%(Extension)')"/>
  </Target>

  <Target Name='bc-pb'
          DependsOnTargets='protobuf'
          Outputs='..\src\bc.pb.cc'>
    <Exec Command='protoc -I"$(PBDIR)" --cpp_out="$(MSBuildProjectDirectory)\..\src" "$(PBDIR)\bc.proto"' WorkingDirectory='$(PREFIX)\bin'/>
  </Target>

  <Target Name='cli-pb'
          DependsOnTargets='protobuf'
          Outputs='..\src\cli.pb.cc'>
    <Exec Command='protoc -I"$(PBDIR)" --cpp_out="$(MSBuildProjectDirectory)\..\src" "$(PBDIR)\cli.proto"' WorkingDirectory='$(PREFIX)\bin'/>
  </Target>

  <Target Name='ipc-pb'
          DependsOnTargets='protobuf'
          Outputs='..\src\ipc.pb.cc'>
    <Exec Command='protoc -I"$(PBDIR)" --cpp_out="$(MSBuildProjectDirectory)\..\src" "$(PBDIR)\ipc.proto"' WorkingDirectory='$(PREFIX)\bin'/>
  </Target>

  <Target Name='lo-pb'
          DependsOnTargets='protobuf'
          Outputs='..\src\lo.pb.cc'>
    <Exec Command='protoc -I"$(PBDIR)" --cpp_out="$(MSBuildProjectDirectory)\..\src" "$(PBDIR)\lo.proto"' WorkingDirectory='$(PREFIX)\bin'/>
  </Target>

  <Target Name='phml-pb'
          DependsOnTargets='protobuf'
          Outputs='..\src\phml.pb.cc'>
    <Exec Command='protoc -I"$(PBDIR)" --cpp_out="$(MSBuildProjectDirectory)\..\src" "$(PBDIR)\phml.proto"' WorkingDirectory='$(PREFIX)\bin'/>
  </Target>

  <Target Name='unit-pb'
          DependsOnTargets='protobuf'
          Outputs='..\src\unit.pb.cc'>
    <Exec Command='protoc -I"$(PBDIR)" --cpp_out="$(MSBuildProjectDirectory)\..\src" "$(PBDIR)\unit.proto"' WorkingDirectory='$(PREFIX)\bin'/>
  </Target>

  <Target Name='build'
          DependsOnTargets='boost;ceres-solver;clibsedml;sundials;SBML_odeSolver;czmq;wxWidgets;bc-pb;cli-pb;ipc-pb;lo-pb;phml-pb;unit-pb'
          Outputs='tmp\build'>
    <MakeDir Directories='$(VARDIR)\build'/>
    <Exec Command='cmake $(CMakeGeneratorOption) -DCMAKE_INSTALL_PREFIX="$(PREFIX)" ..\..\..' WorkingDirectory='$(VARDIR)\build'/>
    <Exec Command='cmake --build "$(VARDIR)\build" --target install --config Release --clean-first'/>
    <Touch AlwaysCreate='true' Files='tmp\build'/>
  </Target>

  <Target Name='flint'
          DependsOnTargets='build'
          Outputs='tmp\flint'>
    <ItemGroup>
      <DLLFiles Include='opt\bin\ceres.dll'/>
      <DLLFiles Include='opt\bin\czmq.dll'/>
      <DLLFiles Include='opt\bin\libprotobuf.dll'/>
      <DLLFiles Include='opt\bin\libsbml.dll'/>
      <DLLFiles Include='opt\bin\libxml2.dll'/>
      <DLLFiles Include='opt\bin\libzmq-*.dll'/>
      <DLLFiles Include='opt\bin\ODES.dll'/>
      <DLLFiles Include='opt\bin\sedml.dll'/>
      <DLLFiles Include='opt\lib\boost_filesystem-*.dll'/>
      <DLLFiles Include='opt\lib\boost_program_options-*.dll'/>
      <DLLFiles Include='opt\lib\boost_system-*.dll'/>
      <wxMSWReleaseDLLFiles Include='release-dll\**\wxbase310u_*.dll'/>
      <wxMSWReleaseDLLFiles Include='release-dll\**\wxmsw310u_adv_*.dll'/>
      <wxMSWReleaseDLLFiles Include='release-dll\**\wxmsw310u_aui_*.dll'/>
      <wxMSWReleaseDLLFiles Include='release-dll\**\wxmsw310u_core_*.dll'/>
      <wxMSWReleaseDLLFiles Include='release-dll\**\wxmsw310u_propgrid_*.dll'/>
      <ExeFiles Include='csv2isd.exe;flint2.exe;flint-cli.exe;flint-exec.exe;flint-lodbg.exe;flint-open.exe;flint-pause.exe;flint-resume.exe;flint-run.exe;flint-tr.exe;isd2csv.exe;isdbswap.exe;isdcut.exe;isddiff.exe;isdhead.exe;isdls.exe;isdmerge.exe;isdrand.exe;isdsort.exe;isdstrip.exe;isdwc.exe'/>
    </ItemGroup>
    <MakeDir Directories='flint'/>
    <Copy SourceFiles='@(DLLFiles)' DestinationFiles="@(DLLFiles->'flint\%(Filename)%(Extension)')"/>
    <Copy SourceFiles='@(wxMSWReleaseDLLFiles)' DestinationFiles="@(wxMSWReleaseDLLFiles->'flint\%(Filename)%(Extension)')"/>
    <Copy SourceFiles="@(ExeFiles->'opt\bin\%(Filename)%(Extension)')" DestinationFiles="@(ExeFiles->'flint\%(Filename)%(Extension)')"/>
    <Touch AlwaysCreate='true' Files='tmp\flint'/>
  </Target>

  <Target Name='Package'
          DependsOnTargets='flint'
          Inputs='flint\flint.wxs'
          Outputs='flint\flint.msi'>
    <Exec Command='candle -arch $(TargetArch) flint.wxs' WorkingDirectory='flint'/>
    <Exec Command='light -ext WixUIExtension flint.wixobj' WorkingDirectory='flint'/>
  </Target>

  <Target Name='Install' DependsOnTargets='Package'>
    <Exec Command='msiexec /i flint.msi' WorkingDirectory='flint'/>
  </Target>

  <Target Name='Uninstall'>
    <Exec Command='msiexec /x flint.msi' WorkingDirectory='flint'/>
  </Target>

</Project>
